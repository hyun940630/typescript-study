[{"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/index.tsx":"1","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/App.tsx":"2","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Item/Item.tsx":"3","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Cart/Cart.tsx":"4","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Cart/Cart.styles.ts":"5","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/CartItem/CartItem.tsx":"6","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Item/item.styles.ts":"7"},{"size":330,"mtime":1611507723518,"results":"8","hashOfConfig":"9"},{"size":2102,"mtime":1611511574910,"results":"10","hashOfConfig":"9"},{"size":623,"mtime":1611511637738,"results":"11","hashOfConfig":"9"},{"size":619,"mtime":1611511481048,"results":"12","hashOfConfig":"9"},{"size":164,"mtime":1611511215269,"results":"13","hashOfConfig":"9"},{"size":230,"mtime":1611511230959,"results":"14","hashOfConfig":"9"},{"size":536,"mtime":1611511006554,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a0tk7u",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/index.tsx",[],"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/App.tsx",["31"],"import { useState } from 'react';\nimport { useQuery } from 'react-query';\n// Components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// styles\nimport { Wrapper, StyledButton } from './App.styles';\n// Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => \n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products', \n    getProducts\n  );\n\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) => \n    items.reduce((ack: number, item) => ack + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart \n          cartItems={cartItems} \n          addToCart={handleAddToCart} \n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        )))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Item/Item.tsx",[],"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Cart/Cart.tsx",[],"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Cart/Cart.styles.ts",[],"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/CartItem/CartItem.tsx",["32","33","34"],"/Users/xtring/Documents/develop/study/ts-study/react-shopping-cart/src/Item/item.styles.ts",[],{"ruleId":"35","severity":1,"message":"36","line":29,"column":21,"nodeType":"37","messageId":"38","endLine":29,"endColumn":33},{"ruleId":"35","severity":1,"message":"39","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":14},{"ruleId":"35","severity":1,"message":"40","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":22},{"ruleId":"35","severity":1,"message":"41","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":17},"@typescript-eslint/no-unused-vars","'setCartItems' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'CartItemType' is defined but never used.","'Wrapper' is defined but never used."]